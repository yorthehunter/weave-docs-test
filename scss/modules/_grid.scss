$option--flex-grid-mobile-adjust: true;

.grid-row {
  @extend %flex-container, %flex-wrap, %flex-content-start !optional;
  padding-left: $grid--gutter-size / 2;
  padding-right: $grid--gutter-size / 2;

  & > .grid-column,
  & > div {
    margin-left: $grid--gutter-size / 2;
    margin-right: $grid--gutter-size / 2;
    min-width: calc(#{((1/$grid--max-columns) * 100%)} - #{$grid--gutter-size});
    max-width: 100%;
    @if $option--flex-grid-mobile-adjust {
       @include viewport-at(xs){
        min-width: calc(#{((1/$grid--max-columns) * 200%)} - #{$grid--gutter-size});
      }
    }
  }
}
// Sets up basic flex column sizing (e.g. ._1-2, ._2-3, etc.)
@for $i from 1 through $grid--max-columns {
   @for $j from $i through $grid--max-columns{
    $column-width: $i / $j;

    %_#{$i}-#{$j},
    ._#{$i}-#{$j} {
      flex-basis: calc(#{($column-width * 100%)} - #{$grid--gutter-size});
      @if $option--flex-grid-mobile-adjust {
         @include viewport-at(xs){
          flex-basis: calc(#{($column-width * 100%) * 2} - #{$grid--gutter-size});
        }
      }
    }
  }
}
// Creates breakpoint classes for each of the grid column sizes above
@each $breakpoint in $common-size-names {
   @include viewport-equal-to-and-smaller-than(#{$breakpoint}){
    @for $i from 1 through $grid--max-columns {
       @for $j from $i through $grid--max-columns{
        $column-width: $i / $j;

        %_#{$i}-#{$j}-#{$breakpoint},
        ._#{$i}-#{$j}-#{$breakpoint} {
          flex-basis: calc(#{$column-width * 100%} - #{$grid--gutter-size}) !important;
        }
      }
    }
  }
}

%grid--right,
.grid--right {
  @extend %flex-content-end !optional;
}

%grid--left,
.grid--left {
  @extend %flex-content-start !optional;
}

%grid--center,
.grid--center {
  @extend %flex-content-center !optional;
}

%grid--reverse,
.grid--reverse {
  @extend %flex-reverse !optional;
}
// This will force the last child of the grid row to fill the remaining space.
// Useful if you have an unknown number of children.

%grid--fill-space > div:last-of-type,
.grid--fill-space > div:last-of-type {
  flex: 1;
}
